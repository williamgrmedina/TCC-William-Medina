<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE doc [
  <!ENTITY err_percentage_dependencies "0.25">
  <!ENTITY err_percentage_random "0.25">
  <!ENTITY output "0.5">
]>


<task>
	<source>
		<type>DBMS</type>
		<access-configuration>
			<driver>org.postgresql.Driver</driver>
			<uri>jdbc:postgresql:hospitals</uri>
			<schema>public</schema>
			<login>postgres</login>
			<password>postgres</password>
		</access-configuration>
	</source>
	<target>
		<type>DBMS</type>
		<access-configuration>
			<driver>org.postgresql.Driver</driver>
			<uri>jdbc:postgresql:hospitals</uri>
			<schema>target</schema>
			<login>postgres</login>
			<password>postgres</password>
		</access-configuration>
	</target>
	
	<dependencies>
		<![CDATA[
DCs:

fd1: hospitals(providernumber : $providernumber1, hospitalname : $hospitalname1, address1 : $address1_first, address2 : $address2_first, address3 : $address3_first, city : $city1, state : $state1, zipcode : $zipcode1, countyname : $countyname1, phonenumber : $phonenumber1, hospitaltype : $hospitaltype1, hospitalowner : $hospitalowner1, emergencyservice : $emergencyservice1, condition : $condition1, measurecode : $measurecode1, measurename : $measurename1, score : $score1, sample: $sample1, stateavg: $stateavg1), hospitals(providernumber : $providernumber2, hospitalname : $hospitalname2, address1 : $address1_second, address2 : $address2_second, address3 : $address3_second, city : $city2, state : $state2, zipcode : $zipcode2, countyname : $countyname2, phonenumber : $phonenumber2, hospitaltype : $hospitaltype2, hospitalowner : $hospitalowner2, emergencyservice : $emergencyservice2, condition : $condition2, measurecode : $measurecode2, measurename : $measurename2, score : $score2, sample: $sample2, stateavg: $stateavg2),
	$hospitalname1 == $hospitalname2, $zipcode1 != $zipcode2 -> #fail. 

fd2: hospitals(providernumber : $providernumber1, hospitalname : $hospitalname1, address1 : $address1_first, address2 : $address2_first, address3 : $address3_first, city : $city1, state : $state1, zipcode : $zipcode1, countyname : $countyname1, phonenumber : $phonenumber1, hospitaltype : $hospitaltype1, hospitalowner : $hospitalowner1, emergencyservice : $emergencyservice1, condition : $condition1, measurecode : $measurecode1, measurename : $measurename1, score : $score1, sample: $sample1, stateavg: $stateavg1), hospitals(providernumber : $providernumber2, hospitalname : $hospitalname2, address1 : $address1_second, address2 : $address2_second, address3 : $address3_second, city : $city2, state : $state2, zipcode : $zipcode2, countyname : $countyname2, phonenumber : $phonenumber2, hospitaltype : $hospitaltype2, hospitalowner : $hospitalowner2, emergencyservice : $emergencyservice2, condition : $condition2, measurecode : $measurecode2, measurename : $measurename2, score : $score2, sample: $sample2, stateavg: $stateavg2),
	$hospitalname1 == $hospitalname2, $phonenumber1 != $phonenumber2 -> #fail. 	

fd3: hospitals(providernumber : $providernumber1, hospitalname : $hospitalname1, address1 : $address1_first, address2 : $address2_first, address3 : $address3_first, city : $city1, state : $state1, zipcode : $zipcode1, countyname : $countyname1, phonenumber : $phonenumber1, hospitaltype : $hospitaltype1, hospitalowner : $hospitalowner1, emergencyservice : $emergencyservice1, condition : $condition1, measurecode : $measurecode1, measurename : $measurename1, score : $score1, sample: $sample1, stateavg: $stateavg1), hospitals(providernumber : $providernumber2, hospitalname : $hospitalname2, address1 : $address1_second, address2 : $address2_second, address3 : $address3_second, city : $city2, state : $state2, zipcode : $zipcode2, countyname : $countyname2, phonenumber : $phonenumber2, hospitaltype : $hospitaltype2, hospitalowner : $hospitalowner2, emergencyservice : $emergencyservice2, condition : $condition2, measurecode : $measurecode2, measurename : $measurename2, score : $score2, sample: $sample2, stateavg: $stateavg2),
	$measurecode1 == $measurecode2, $measurename1 != $measurename2 -> #fail. 

fd4: hospitals(providernumber : $providernumber1, hospitalname : $hospitalname1, address1 : $address1_first, address2 : $address2_first, address3 : $address3_first, city : $city1, state : $state1, zipcode : $zipcode1, countyname : $countyname1, phonenumber : $phonenumber1, hospitaltype : $hospitaltype1, hospitalowner : $hospitalowner1, emergencyservice : $emergencyservice1, condition : $condition1, measurecode : $measurecode1, measurename : $measurename1, score : $score1, sample: $sample1, stateavg: $stateavg1), hospitals(providernumber : $providernumber2, hospitalname : $hospitalname2, address1 : $address1_second, address2 : $address2_second, address3 : $address3_second, city : $city2, state : $state2, zipcode : $zipcode2, countyname : $countyname2, phonenumber : $phonenumber2, hospitaltype : $hospitaltype2, hospitalowner : $hospitalowner2, emergencyservice : $emergencyservice2, condition : $condition2, measurecode : $measurecode2, measurename : $measurename2, score : $score2, sample: $sample2, stateavg: $stateavg2),
	$measurecode1 == $measurecode2, $stateavg1 != $stateavg2 -> #fail. 

fd5: hospitals(providernumber : $providernumber1, hospitalname : $hospitalname1, address1 : $address1_first, address2 : $address2_first, address3 : $address3_first, city : $city1, state : $state1, zipcode : $zipcode1, countyname : $countyname1, phonenumber : $phonenumber1, hospitaltype : $hospitaltype1, hospitalowner : $hospitalowner1, emergencyservice : $emergencyservice1, condition : $condition1, measurecode : $measurecode1, measurename : $measurename1, score : $score1, sample: $sample1, stateavg: $stateavg1), hospitals(providernumber : $providernumber2, hospitalname : $hospitalname2, address1 : $address1_second, address2 : $address2_second, address3 : $address3_second, city : $city2, state : $state2, zipcode : $zipcode2, countyname : $countyname2, phonenumber : $phonenumber2, hospitaltype : $hospitaltype2, hospitalowner : $hospitalowner2, emergencyservice : $emergencyservice2, condition : $condition2, measurecode : $measurecode2, measurename : $measurename2, score : $score2, sample: $sample2, stateavg: $stateavg2),
	$providernumber1 == $providernumber2, $hospitalname1 != $hospitalname2 -> #fail. 

fd6: hospitals(providernumber : $providernumber1, hospitalname : $hospitalname1, address1 : $address1_first, address2 : $address2_first, address3 : $address3_first, city : $city1, state : $state1, zipcode : $zipcode1, countyname : $countyname1, phonenumber : $phonenumber1, hospitaltype : $hospitaltype1, hospitalowner : $hospitalowner1, emergencyservice : $emergencyservice1, condition : $condition1, measurecode : $measurecode1, measurename : $measurename1, score : $score1, sample: $sample1, stateavg: $stateavg1), hospitals(providernumber : $providernumber2, hospitalname : $hospitalname2, address1 : $address1_second, address2 : $address2_second, address3 : $address3_second, city : $city2, state : $state2, zipcode : $zipcode2, countyname : $countyname2, phonenumber : $phonenumber2, hospitaltype : $hospitaltype2, hospitalowner : $hospitalowner2, emergencyservice : $emergencyservice2, condition : $condition2, measurecode : $measurecode2, measurename : $measurename2, score : $score2, sample: $sample2, stateavg: $stateavg2),
	$measurecode1 == $measurecode2, $condition1 != $condition2 -> #fail. 

fd7: hospitals(providernumber : $providernumber1, hospitalname : $hospitalname1, address1 : $address1_first, address2 : $address2_first, address3 : $address3_first, city : $city1, state : $state1, zipcode : $zipcode1, countyname : $countyname1, phonenumber : $phonenumber1, hospitaltype : $hospitaltype1, hospitalowner : $hospitalowner1, emergencyservice : $emergencyservice1, condition : $condition1, measurecode : $measurecode1, measurename : $measurename1, score : $score1, sample: $sample1, stateavg: $stateavg1), hospitals(providernumber : $providernumber2, hospitalname : $hospitalname2, address1 : $address1_second, address2 : $address2_second, address3 : $address3_second, city : $city2, state : $state2, zipcode : $zipcode2, countyname : $countyname2, phonenumber : $phonenumber2, hospitaltype : $hospitaltype2, hospitalowner : $hospitalowner2, emergencyservice : $emergencyservice2, condition : $condition2, measurecode : $measurecode2, measurename : $measurename2, score : $score2, sample: $sample2, stateavg: $stateavg2),
	$hospitalname1 == $hospitalname2, $address1_first != $address1_second -> #fail. 

fd8: hospitals(providernumber : $providernumber1, hospitalname : $hospitalname1, address1 : $address1_first, address2 : $address2_first, address3 : $address3_first, city : $city1, state : $state1, zipcode : $zipcode1, countyname : $countyname1, phonenumber : $phonenumber1, hospitaltype : $hospitaltype1, hospitalowner : $hospitalowner1, emergencyservice : $emergencyservice1, condition : $condition1, measurecode : $measurecode1, measurename : $measurename1, score : $score1, sample: $sample1, stateavg: $stateavg1), hospitals(providernumber : $providernumber2, hospitalname : $hospitalname2, address1 : $address1_second, address2 : $address2_second, address3 : $address3_second, city : $city2, state : $state2, zipcode : $zipcode2, countyname : $countyname2, phonenumber : $phonenumber2, hospitaltype : $hospitaltype2, hospitalowner : $hospitalowner2, emergencyservice : $emergencyservice2, condition : $condition2, measurecode : $measurecode2, measurename : $measurename2, score : $score2, sample: $sample2, stateavg: $stateavg2),
	$hospitalname1 == $hospitalname2, $hospitalowner1 != $hospitalowner2 -> #fail. 	

fd9: hospitals(providernumber : $providernumber1, hospitalname : $hospitalname1, address1 : $address1_first, address2 : $address2_first, address3 : $address3_first, city : $city1, state : $state1, zipcode : $zipcode1, countyname : $countyname1, phonenumber : $phonenumber1, hospitaltype : $hospitaltype1, hospitalowner : $hospitalowner1, emergencyservice : $emergencyservice1, condition : $condition1, measurecode : $measurecode1, measurename : $measurename1, score : $score1, sample: $sample1, stateavg: $stateavg1), hospitals(providernumber : $providernumber2, hospitalname : $hospitalname2, address1 : $address1_second, address2 : $address2_second, address3 : $address3_second, city : $city2, state : $state2, zipcode : $zipcode2, countyname : $countyname2, phonenumber : $phonenumber2, hospitaltype : $hospitaltype2, hospitalowner : $hospitalowner2, emergencyservice : $emergencyservice2, condition : $condition2, measurecode : $measurecode2, measurename : $measurename2, score : $score2, sample: $sample2, stateavg: $stateavg2),
	$hospitalname1 == $hospitalname2, $providernumber1 != $providernumber2 -> #fail. 

fd10: hospitals(providernumber : $providernumber1, hospitalname : $hospitalname1, address1 : $address1_first, address2 : $address2_first, address3 : $address3_first, city : $city1, state : $state1, zipcode : $zipcode1, countyname : $countyname1, phonenumber : $phonenumber1, hospitaltype : $hospitaltype1, hospitalowner : $hospitalowner1, emergencyservice : $emergencyservice1, condition : $condition1, measurecode : $measurecode1, measurename : $measurename1, score : $score1, sample: $sample1, stateavg: $stateavg1), hospitals(providernumber : $providernumber2, hospitalname : $hospitalname2, address1 : $address1_second, address2 : $address2_second, address3 : $address3_second, city : $city2, state : $state2, zipcode : $zipcode2, countyname : $countyname2, phonenumber : $phonenumber2, hospitaltype : $hospitaltype2, hospitalowner : $hospitalowner2, emergencyservice : $emergencyservice2, condition : $condition2, measurecode : $measurecode2, measurename : $measurename2, score : $score2, sample: $sample2, stateavg: $stateavg2),
	$city1 == $city2, $countyname1 != $countyname2 -> #fail.

fd11: hospitals(providernumber : $providernumber1, hospitalname : $hospitalname1, address1 : $address1_first, address2 : $address2_first, address3 : $address3_first, city : $city1, state : $state1, zipcode : $zipcode1, countyname : $countyname1, phonenumber : $phonenumber1, hospitaltype : $hospitaltype1, hospitalowner : $hospitalowner1, emergencyservice : $emergencyservice1, condition : $condition1, measurecode : $measurecode1, measurename : $measurename1, score : $score1, sample: $sample1, stateavg: $stateavg1), hospitals(providernumber : $providernumber2, hospitalname : $hospitalname2, address1 : $address1_second, address2 : $address2_second, address3 : $address3_second, city : $city2, state : $state2, zipcode : $zipcode2, countyname : $countyname2, phonenumber : $phonenumber2, hospitaltype : $hospitaltype2, hospitalowner : $hospitalowner2, emergencyservice : $emergencyservice2, condition : $condition2, measurecode : $measurecode2, measurename : $measurename2, score : $score2, sample: $sample2, stateavg: $stateavg2),
	$zipcode1 == $zipcode2, $emergencyservice1 != $emergencyservice2 -> #fail. 	 

fd12: hospitals(providernumber : $providernumber1, hospitalname : $hospitalname1, address1 : $address1_first, address2 : $address2_first, address3 : $address3_first, city : $city1, state : $state1, zipcode : $zipcode1, countyname : $countyname1, phonenumber : $phonenumber1, hospitaltype : $hospitaltype1, hospitalowner : $hospitalowner1, emergencyservice : $emergencyservice1, condition : $condition1, measurecode : $measurecode1, measurename : $measurename1, score : $score1, sample: $sample1, stateavg: $stateavg1), hospitals(providernumber : $providernumber2, hospitalname : $hospitalname2, address1 : $address1_second, address2 : $address2_second, address3 : $address3_second, city : $city2, state : $state2, zipcode : $zipcode2, countyname : $countyname2, phonenumber : $phonenumber2, hospitaltype : $hospitaltype2, hospitalowner : $hospitalowner2, emergencyservice : $emergencyservice2, condition : $condition2, measurecode : $measurecode2, measurename : $measurename2, score : $score2, sample: $sample2, stateavg: $stateavg2),
	$hospitalname1 == $hospitalname2, $city1 != $city2 -> #fail. 

fd13: hospitals(providernumber : $providernumber1, hospitalname : $hospitalname1, address1 : $address1_first, address2 : $address2_first, address3 : $address3_first, city : $city1, state : $state1, zipcode : $zipcode1, countyname : $countyname1, phonenumber : $phonenumber1, hospitaltype : $hospitaltype1, hospitalowner : $hospitalowner1, emergencyservice : $emergencyservice1, condition : $condition1, measurecode : $measurecode1, measurename : $measurename1, score : $score1, sample: $sample1, stateavg: $stateavg1), hospitals(providernumber : $providernumber2, hospitalname : $hospitalname2, address1 : $address1_second, address2 : $address2_second, address3 : $address3_second, city : $city2, state : $state2, zipcode : $zipcode2, countyname : $countyname2, phonenumber : $phonenumber2, hospitaltype : $hospitaltype2, hospitalowner : $hospitalowner2, emergencyservice : $emergencyservice2, condition : $condition2, measurecode : $measurecode2, measurename : $measurename2, score : $score2, sample: $sample2, stateavg: $stateavg2),
	$measurename1 == $measurename2, $measurecode1 != $measurecode2 -> #fail. 

fd14: hospitals(providernumber : $providernumber1, hospitalname : $hospitalname1, address1 : $address1_first, address2 : $address2_first, address3 : $address3_first, city : $city1, state : $state1, zipcode : $zipcode1, countyname : $countyname1, phonenumber : $phonenumber1, hospitaltype : $hospitaltype1, hospitalowner : $hospitalowner1, emergencyservice : $emergencyservice1, condition : $condition1, measurecode : $measurecode1, measurename : $measurename1, score : $score1, sample: $sample1, stateavg: $stateavg1), hospitals(providernumber : $providernumber2, hospitalname : $hospitalname2, address1 : $address1_second, address2 : $address2_second, address3 : $address3_second, city : $city2, state : $state2, zipcode : $zipcode2, countyname : $countyname2, phonenumber : $phonenumber2, hospitaltype : $hospitaltype2, hospitalowner : $hospitalowner2, emergencyservice : $emergencyservice2, condition : $condition2, measurecode : $measurecode2, measurename : $measurename2, score : $score2, sample: $sample2, stateavg: $stateavg2),
	$condition1 == $condition2, $measurename1 == $measurename2, $hospitaltype1 != $hospitaltype2 -> #fail. 

]]>
	</dependencies>
	<configuration>
		<printLog>true</printLog>
		<checkChanges>true</checkChanges>
		<recreateDBOnStart>false</recreateDBOnStart>
		<applyCellChanges>true</applyCellChanges>
		<estimateRepairability>true</estimateRepairability>
		<useDeltaDBForChanges>true</useDeltaDBForChanges>
		<cloneTargetSchema>true</cloneTargetSchema>
		<cloneSuffix>_dirty</cloneSuffix>
		<avoidInteractions>false</avoidInteractions>
		<exportDirtyDB>true</exportDirtyDB>
		<exportDirtyDBPath>dirty_&output;/</exportDirtyDBPath><exportDirtyDBType>CSV</exportDirtyDBType>
		<exportCellChanges>true</exportCellChanges>
		<exportCellChangesPath>cellChanges.csv</exportCellChangesPath>
		
		<errorPercentages>
			<defaultPercentage>0.0</defaultPercentage>
			<vioGenQueries>
				<!-- $hospitalname1 == $hospitalname2, $zipcode1 != $zipcode2 -->
				<vioGenQuery id="fd1">
					<comparison>(hospitalname1 == hospitalname2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd1">
					<comparison>(zipcode1 != zipcode2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>

				<vioGenQuery id="fd2">
					<comparison>(hospitalname1 == hospitalname2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd2">
					<comparison>(phonenumber1 != phonenumber2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>

				<vioGenQuery id="fd3">
					<comparison>(measurecode1 == measurecode2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd3">
					<comparison>(measurename1 != measurename2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>

				<vioGenQuery id="fd4">
					<comparison>(measurecode1 == measurecode2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd4">
					<comparison>(stateavg1 != stateavg2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>

				<vioGenQuery id="fd5">
					<comparison>(providernumber1 == providernumber2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd5">
					<comparison>(hospitalname1 != hospitalname2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>

				<vioGenQuery id="fd6">
					<comparison>(measurecode1 == measurecode2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd6">
					<comparison>(condition1 != condition2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>

				<vioGenQuery id="fd7">
					<comparison>(hospitalname1 == hospitalname2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd7">
					<comparison>(address1_first != address1_second)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>

				<vioGenQuery id="fd8">
					<comparison>(hospitalname1 == hospitalname2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd8">
					<comparison>(hospitalowner1 != hospitalowner2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>

				<vioGenQuery id="fd9">
					<comparison>(hospitalname1 == hospitalname2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd9">
					<comparison>(providernumber1 != providernumber2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>

				<vioGenQuery id="fd10">
					<comparison>(city1 == city2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd10">
					<comparison>(countyname1 != countyname2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>

				<vioGenQuery id="fd11">
					<comparison>(zipcode1 == zipcode2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd11">
					<comparison>(emergencyservice1 != emergencyservice2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>

				<vioGenQuery id="fd12">
					<comparison>(hospitalname1 == hospitalname2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd12">
					<comparison>(city1 != city2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>

				<vioGenQuery id="fd13">
					<comparison>(measurename1 == measurename2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd13">
					<comparison>(measurecode1 != measurecode2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>

				<vioGenQuery id="fd14">
					<comparison>(condition1 == condition2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd14">
					<comparison>(measurename1 == measurename2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery>
				<vioGenQuery id="fd14">
					<comparison>(hospitaltype1 != hospitaltype2)</comparison>
					<percentage>&err_percentage_dependencies;</percentage>
				</vioGenQuery> 
				</vioGenQueries>
			</errorPercentages>

			<randomErrors>
				<tables>
					<table name="hospitals">
						<percentage>&err_percentage_random;</percentage>
						<!-- Percentage is wrt attributes to dirty in the table -->
						<attributes>
							<attribute>providernumber</attribute>
							<attribute>hospitalname</attribute>
							<attribute>address1</attribute>
							<attribute>address2</attribute>
							<attribute>address3</attribute>
							<attribute>city</attribute>
							<attribute>state</attribute>
							<attribute>zipcode</attribute>
							<attribute>countyname</attribute>
							<attribute>phonenumber</attribute>
							<attribute>hospitaltype</attribute>
							<attribute>hospitalowner</attribute>
							<attribute>emergencyservice</attribute>
							<attribute>condition</attribute>
							<attribute>measurecode</attribute>
							<attribute>measurename</attribute>
							<attribute>score</attribute>
							<attribute>sample</attribute>
							<attribute>stateavg</attribute>
						</attributes>
					</table>
				</tables>
			</randomErrors>


		</configuration>
	</task>